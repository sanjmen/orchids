"""gunicorn WSGI server configuration."""

from multiprocessing import cpu_count
from os import environ


def max_workers():
    return int(cpu_count())


bind = '0.0.0.0:' + environ.get('PORT', '8000')

# The maximum number of requests a worker will process before restarting.
# If this is set to zero (the default) then the automatic worker restarts are disabled.
max_requests = 1000

# The maximum number of simultaneous clients.
# This setting only affects the Eventlet and Gevent worker types.
worker_connections = 50

# options are: sync, gevent, eventlet, tornado 
worker_class = 'gevent'

# The number of worker process for handling requests.
# A positive integer generally in the 2-4 x $(NUM_CORES) range. You'll want to
# vary this a bit to find the best for your particular application's work load.
workers = max_workers()

# By preloading an application you can save some RAM resources as well as speed up 
# server boot times. Although, if you defer application loading to each worker 
# process, you can reload your application code easily by restarting workers.
preload_app = True
